{"version":3,"sources":["webpack://jestMock/webpack/universalModuleDefinition","webpack://jestMock/webpack/bootstrap","webpack://jestMock/(webpack)/buildin/global.js","webpack://jestMock/./packages/jest-mock/src/index.js"],"names":["g","Function","e","window","module","exports","MOCK_CONSTRUCTOR_NAME","FUNCTION_NAME_RESERVED_PATTERN","FUNCTION_NAME_RESERVED_REPLACE","RegExp","source","RESERVED_KEYWORDS","Set","matchArity","fn","length","mockConstructor","a","apply","arguments","b","c","d","f","h","i","getObjectType","value","Object","prototype","toString","slice","getType","ref","typeName","Array","isArray","undefined","isReadonlyProp","object","prop","ModuleMockerClass","global","_environmentGlobal","_mockState","WeakMap","_mockConfigRegistry","_spyState","ModuleMocker","_invocationCallCounter","slots","EnvObjectProto","EnvFunctionProto","EnvRegExpProto","ObjectProto","FunctionProto","RegExpProto","ownNames","getOwnPropertyNames","propDesc","getOwnPropertyDescriptor","get","__esModule","add","getPrototypeOf","from","config","_defaultMockConfig","set","state","_defaultMockState","defaultReturnValue","isReturnValueLastSet","mockImpl","mockName","specificMockImpls","specificReturnValues","calls","instances","invocationCallOrder","results","metadata","restore","type","members","prototypeSlots","_getSlots","mocker","mockState","_ensureMockState","mockConfig","_ensureMockConfig","push","call","mockResult","finalReturnValue","thrownError","callDidThrowError","forEach","slot","protoImpl","generateFromMetadata","_protoImpl","shift","returnValue","specificMockImpl","error","_createMockFunction","_isMockFunction","getMockImplementation","defineProperty","configurable","enumerable","val","mockClear","delete","mockReset","mockRestore","mockReturnValueOnce","mockResolvedValueOnce","mockImplementationOnce","Promise","resolve","mockRejectedValueOnce","reject","mockReturnValue","mockResolvedValue","mockImplementation","mockRejectedValue","mockReturnThis","name","getMockName","unknownType","Error","boundFunctionPrefix","bindCall","startsWith","substring","has","test","replace","body","createConstructor","callbacks","refs","mock","_makeComponent","refID","slotMetadata","_generateMock","constructor","_metadata","setter","component","_refs","Map","size","match","getMetadata","implementation","methodName","accessType","_spyOnProperty","_typeOf","original","isMockFunction","obj","propertyName","descriptor","proto"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jestMock\"] = factory();\n\telse\n\t\troot[\"jestMock\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/jest-mock/src/index.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Global} from 'types/Global';\n\ntype Mock = any;\nexport type MockFunctionMetadata = {\n  ref?: any,\n  members?: {[key: string]: MockFunctionMetadata},\n  mockImpl?: () => any,\n  name?: string,\n  refID?: string | number,\n  type?: string,\n  value?: any,\n  length?: number,\n};\n\n/**\n * Possible types of a MockFunctionResult.\n * 'return': The call completed by returning normally.\n * 'throw': The call completed by throwing a value.\n * 'incomplete': The call has not completed yet. This is possible if you read\n *               the  mock function result from within the mock function itself\n *               (or a function called by the mock function).\n */\ntype MockFunctionResultType = 'return' | 'throw' | 'incomplete';\n\n/**\n * Represents the result of a single call to a mock function.\n */\ntype MockFunctionResult = {\n  /**\n   * Indicates how the call completed.\n   */\n  type: MockFunctionResultType,\n  /**\n   * The value that was either thrown or returned by the function.\n   * Undefined when type === 'incomplete'.\n   */\n  value: any,\n};\n\ntype MockFunctionState = {\n  instances: Array<any>,\n  calls: Array<Array<any>>,\n  /**\n   * List of results of calls to the mock function.\n   */\n  results: Array<MockFunctionResult>,\n  invocationCallOrder: Array<number>,\n};\n\ntype MockFunctionConfig = {\n  isReturnValueLastSet: boolean,\n  defaultReturnValue: any,\n  mockImpl: any,\n  mockName: string,\n  specificReturnValues: Array<any>,\n  specificMockImpls: Array<any>,\n};\n\nconst MOCK_CONSTRUCTOR_NAME = 'mockConstructor';\n\nconst FUNCTION_NAME_RESERVED_PATTERN = /[\\s!-\\/:-@\\[-`{-~]/;\nconst FUNCTION_NAME_RESERVED_REPLACE = new RegExp(\n  FUNCTION_NAME_RESERVED_PATTERN.source,\n  'g',\n);\n\nconst RESERVED_KEYWORDS = new Set([\n  'arguments',\n  'await',\n  'break',\n  'case',\n  'catch',\n  'class',\n  'const',\n  'continue',\n  'debugger',\n  'default',\n  'delete',\n  'do',\n  'else',\n  'enum',\n  'eval',\n  'export',\n  'extends',\n  'false',\n  'finally',\n  'for',\n  'function',\n  'if',\n  'implements',\n  'import',\n  'in',\n  'instanceof',\n  'interface',\n  'let',\n  'new',\n  'null',\n  'package',\n  'private',\n  'protected',\n  'public',\n  'return',\n  'static',\n  'super',\n  'switch',\n  'this',\n  'throw',\n  'true',\n  'try',\n  'typeof',\n  'var',\n  'void',\n  'while',\n  'with',\n  'yield',\n]);\n\nfunction matchArity(fn: any, length: number): any {\n  let mockConstructor;\n\n  switch (length) {\n    case 1:\n      mockConstructor = function(a) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 2:\n      mockConstructor = function(a, b) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 3:\n      mockConstructor = function(a, b, c) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 4:\n      mockConstructor = function(a, b, c, d) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 5:\n      mockConstructor = function(a, b, c, d, e) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 6:\n      mockConstructor = function(a, b, c, d, e, f) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 7:\n      mockConstructor = function(a, b, c, d, e, f, g) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 8:\n      mockConstructor = function(a, b, c, d, e, f, g, h) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    case 9:\n      mockConstructor = function(a, b, c, d, e, f, g, h, i) {\n        return fn.apply(this, arguments);\n      };\n      break;\n    default:\n      mockConstructor = function() {\n        return fn.apply(this, arguments);\n      };\n      break;\n  }\n\n  return mockConstructor;\n}\n\nfunction getObjectType(value: any): string {\n  return Object.prototype.toString.apply(value).slice(8, -1);\n}\n\nfunction getType(ref?: any): string | null {\n  const typeName = getObjectType(ref);\n  if (\n    typeName === 'Function' ||\n    typeName === 'AsyncFunction' ||\n    typeName === 'GeneratorFunction'\n  ) {\n    return 'function';\n  } else if (Array.isArray(ref)) {\n    return 'array';\n  } else if (typeName === 'Object') {\n    return 'object';\n  } else if (\n    typeName === 'Number' ||\n    typeName === 'String' ||\n    typeName === 'Boolean' ||\n    typeName === 'Symbol'\n  ) {\n    return 'constant';\n  } else if (\n    typeName === 'Map' ||\n    typeName === 'WeakMap' ||\n    typeName === 'Set'\n  ) {\n    return 'collection';\n  } else if (typeName === 'RegExp') {\n    return 'regexp';\n  } else if (ref === undefined) {\n    return 'undefined';\n  } else if (ref === null) {\n    return 'null';\n  } else {\n    return null;\n  }\n}\n\nfunction isReadonlyProp(object: any, prop: string): boolean {\n  if (\n    prop === 'arguments' ||\n    prop === 'caller' ||\n    prop === 'callee' ||\n    prop === 'name' ||\n    prop === 'length'\n  ) {\n    const typeName = getObjectType(object);\n    return (\n      typeName === 'Function' ||\n      typeName === 'AsyncFunction' ||\n      typeName === 'GeneratorFunction'\n    );\n  }\n\n  if (\n    prop === 'source' ||\n    prop === 'global' ||\n    prop === 'ignoreCase' ||\n    prop === 'multiline'\n  ) {\n    return getObjectType(object) === 'RegExp';\n  }\n\n  return false;\n}\n\nclass ModuleMockerClass {\n  _environmentGlobal: Global;\n  _mockState: WeakMap<Function, MockFunctionState>;\n  _mockConfigRegistry: WeakMap<Function, MockFunctionConfig>;\n  _spyState: Set<() => void>;\n  ModuleMocker: Class<ModuleMockerClass>;\n  _invocationCallCounter: number;\n\n  /**\n   * @see README.md\n   * @param global Global object of the test environment, used to create\n   * mocks\n   */\n  constructor(global: Global) {\n    this._environmentGlobal = global;\n    this._mockState = new WeakMap();\n    this._mockConfigRegistry = new WeakMap();\n    this._spyState = new Set();\n    this.ModuleMocker = ModuleMockerClass;\n    this._invocationCallCounter = 1;\n  }\n\n  _getSlots(object?: Object): Array<string> {\n    if (!object) {\n      return [];\n    }\n\n    const slots = new Set();\n    const EnvObjectProto = this._environmentGlobal.Object.prototype;\n    const EnvFunctionProto = this._environmentGlobal.Function.prototype;\n    const EnvRegExpProto = this._environmentGlobal.RegExp.prototype;\n\n    // Also check the builtins in the current context as they leak through\n    // core node modules.\n    const ObjectProto = Object.prototype;\n    const FunctionProto = Function.prototype;\n    const RegExpProto = RegExp.prototype;\n\n    // Properties of Object.prototype, Function.prototype and RegExp.prototype\n    // are never reported as slots\n    while (\n      object != null &&\n      object !== EnvObjectProto &&\n      object !== EnvFunctionProto &&\n      object !== EnvRegExpProto &&\n      object !== ObjectProto &&\n      object !== FunctionProto &&\n      object !== RegExpProto\n    ) {\n      const ownNames = Object.getOwnPropertyNames(object);\n\n      for (let i = 0; i < ownNames.length; i++) {\n        const prop = ownNames[i];\n\n        if (!isReadonlyProp(object, prop)) {\n          const propDesc = Object.getOwnPropertyDescriptor(object, prop);\n\n          if ((propDesc !== undefined && !propDesc.get) || object.__esModule) {\n            slots.add(prop);\n          }\n        }\n      }\n\n      object = Object.getPrototypeOf(object);\n    }\n\n    return Array.from(slots);\n  }\n\n  _ensureMockConfig(f: Mock): MockFunctionConfig {\n    let config = this._mockConfigRegistry.get(f);\n    if (!config) {\n      config = this._defaultMockConfig();\n      this._mockConfigRegistry.set(f, config);\n    }\n    return config;\n  }\n\n  _ensureMockState(f: Mock): MockFunctionState {\n    let state = this._mockState.get(f);\n    if (!state) {\n      state = this._defaultMockState();\n      this._mockState.set(f, state);\n    }\n    return state;\n  }\n\n  _defaultMockConfig(): MockFunctionConfig {\n    return {\n      defaultReturnValue: undefined,\n      isReturnValueLastSet: false,\n      mockImpl: undefined,\n      mockName: 'jest.fn()',\n      specificMockImpls: [],\n      specificReturnValues: [],\n    };\n  }\n\n  _defaultMockState(): MockFunctionState {\n    return {\n      calls: [],\n      instances: [],\n      invocationCallOrder: [],\n      results: [],\n    };\n  }\n\n  _makeComponent(metadata: MockFunctionMetadata, restore?: () => void): Mock {\n    if (metadata.type === 'object') {\n      return new this._environmentGlobal.Object();\n    } else if (metadata.type === 'array') {\n      return new this._environmentGlobal.Array();\n    } else if (metadata.type === 'regexp') {\n      return new this._environmentGlobal.RegExp('');\n    } else if (\n      metadata.type === 'constant' ||\n      metadata.type === 'collection' ||\n      metadata.type === 'null' ||\n      metadata.type === 'undefined'\n    ) {\n      return metadata.value;\n    } else if (metadata.type === 'function') {\n      /* eslint-disable prefer-const */\n      let f;\n      /* eslint-enable prefer-const */\n\n      const prototype =\n        (metadata.members &&\n          metadata.members.prototype &&\n          metadata.members.prototype.members) ||\n        {};\n      const prototypeSlots = this._getSlots(prototype);\n      const mocker = this;\n      const mockConstructor = matchArity(function() {\n        const mockState = mocker._ensureMockState(f);\n        const mockConfig = mocker._ensureMockConfig(f);\n        mockState.instances.push(this);\n        mockState.calls.push(Array.prototype.slice.call(arguments));\n        // Create and record an \"incomplete\" mock result immediately upon\n        // calling rather than waiting for the mock to return. This avoids\n        // issues caused by recursion where results can be recorded in the\n        // wrong order.\n        const mockResult = {\n          type: 'incomplete',\n          value: undefined,\n        };\n        mockState.results.push(mockResult);\n        mockState.invocationCallOrder.push(mocker._invocationCallCounter++);\n\n        // Will be set to the return value of the mock if an error is not thrown\n        let finalReturnValue;\n        // Will be set to the error that is thrown by the mock (if it throws)\n        let thrownError;\n        // Will be set to true if the mock throws an error. The presence of a\n        // value in `thrownError` is not a 100% reliable indicator because a\n        // function could throw a value of undefined.\n        let callDidThrowError = false;\n\n        try {\n          // The bulk of the implementation is wrapped in an immediately\n          // executed arrow function so the return value of the mock function\n          // can be easily captured and recorded, despite the many separate\n          // return points within the logic.\n          finalReturnValue = (() => {\n            if (this instanceof f) {\n              // This is probably being called as a constructor\n              prototypeSlots.forEach(slot => {\n                // Copy prototype methods to the instance to make\n                // it easier to interact with mock instance call and\n                // return values\n                if (prototype[slot].type === 'function') {\n                  const protoImpl = this[slot];\n                  this[slot] = mocker.generateFromMetadata(prototype[slot]);\n                  this[slot]._protoImpl = protoImpl;\n                }\n              });\n\n              // Run the mock constructor implementation\n              const mockImpl = mockConfig.specificMockImpls.length\n                ? mockConfig.specificMockImpls.shift()\n                : mockConfig.mockImpl;\n              return mockImpl && mockImpl.apply(this, arguments);\n            }\n\n            const returnValue = mockConfig.defaultReturnValue;\n            // If return value is last set, either specific or default, i.e.\n            // mockReturnValueOnce()/mockReturnValue() is called and no\n            // mockImplementationOnce()/mockImplementation() is called after\n            // that.\n            // use the set return value.\n            if (mockConfig.specificReturnValues.length) {\n              return mockConfig.specificReturnValues.shift();\n            }\n\n            if (mockConfig.isReturnValueLastSet) {\n              return mockConfig.defaultReturnValue;\n            }\n\n            // If mockImplementationOnce()/mockImplementation() is last set,\n            // or specific return values are used up, use the mock\n            // implementation.\n            let specificMockImpl;\n            if (returnValue === undefined) {\n              specificMockImpl = mockConfig.specificMockImpls.shift();\n              if (specificMockImpl === undefined) {\n                specificMockImpl = mockConfig.mockImpl;\n              }\n              if (specificMockImpl) {\n                return specificMockImpl.apply(this, arguments);\n              }\n            }\n\n            // Otherwise use prototype implementation\n            if (returnValue === undefined && f._protoImpl) {\n              return f._protoImpl.apply(this, arguments);\n            }\n\n            return returnValue;\n          })();\n        } catch (error) {\n          // Store the thrown error so we can record it, then re-throw it.\n          thrownError = error;\n          callDidThrowError = true;\n          throw error;\n        } finally {\n          // Record the result of the function.\n          // NOTE: Intentionally NOT pushing/indexing into the array of mock\n          //       results here to avoid corrupting results data if mockClear()\n          //       is called during the execution of the mock.\n          mockResult.type = callDidThrowError ? 'throw' : 'return';\n          mockResult.value = callDidThrowError ? thrownError : finalReturnValue;\n        }\n\n        return finalReturnValue;\n      }, metadata.length || 0);\n\n      f = this._createMockFunction(metadata, mockConstructor);\n      f._isMockFunction = true;\n      f.getMockImplementation = () => this._ensureMockConfig(f).mockImpl;\n\n      if (typeof restore === 'function') {\n        this._spyState.add(restore);\n      }\n\n      this._mockState.set(f, this._defaultMockState());\n      this._mockConfigRegistry.set(f, this._defaultMockConfig());\n\n      // $FlowFixMe - defineProperty getters not supported\n      Object.defineProperty(f, 'mock', {\n        configurable: false,\n        enumerable: true,\n        get: () => this._ensureMockState(f),\n        set: val => this._mockState.set(f, val),\n      });\n\n      f.mockClear = () => {\n        this._mockState.delete(f);\n        return f;\n      };\n\n      f.mockReset = () => {\n        f.mockClear();\n        this._mockConfigRegistry.delete(f);\n        return f;\n      };\n\n      f.mockRestore = () => {\n        f.mockReset();\n        return restore ? restore() : undefined;\n      };\n\n      f.mockReturnValueOnce = value => {\n        // next function call will return this value or default return value\n        const mockConfig = this._ensureMockConfig(f);\n        mockConfig.specificReturnValues.push(value);\n        return f;\n      };\n\n      f.mockResolvedValueOnce = value =>\n        f.mockImplementationOnce(() => Promise.resolve(value));\n\n      f.mockRejectedValueOnce = value =>\n        f.mockImplementationOnce(() => Promise.reject(value));\n\n      f.mockReturnValue = value => {\n        // next function call will return specified return value or this one\n        const mockConfig = this._ensureMockConfig(f);\n        mockConfig.isReturnValueLastSet = true;\n        mockConfig.defaultReturnValue = value;\n        return f;\n      };\n\n      f.mockResolvedValue = value =>\n        f.mockImplementation(() => Promise.resolve(value));\n\n      f.mockRejectedValue = value =>\n        f.mockImplementation(() => Promise.reject(value));\n\n      f.mockImplementationOnce = fn => {\n        // next function call will use this mock implementation return value\n        // or default mock implementation return value\n        const mockConfig = this._ensureMockConfig(f);\n        mockConfig.isReturnValueLastSet = false;\n        mockConfig.specificMockImpls.push(fn);\n        return f;\n      };\n\n      f.mockImplementation = fn => {\n        // next function call will use mock implementation return value\n        const mockConfig = this._ensureMockConfig(f);\n        mockConfig.isReturnValueLastSet = false;\n        mockConfig.defaultReturnValue = undefined;\n        mockConfig.mockImpl = fn;\n        return f;\n      };\n\n      f.mockReturnThis = () =>\n        f.mockImplementation(function() {\n          return this;\n        });\n\n      f.mockName = name => {\n        if (name) {\n          const mockConfig = this._ensureMockConfig(f);\n          mockConfig.mockName = name;\n        }\n        return f;\n      };\n\n      f.getMockName = () => {\n        const mockConfig = this._ensureMockConfig(f);\n        return mockConfig.mockName || 'jest.fn()';\n      };\n\n      if (metadata.mockImpl) {\n        f.mockImplementation(metadata.mockImpl);\n      }\n\n      return f;\n    } else {\n      const unknownType = metadata.type || 'undefined type';\n      throw new Error('Unrecognized type ' + unknownType);\n    }\n  }\n\n  _createMockFunction(\n    metadata: MockFunctionMetadata,\n    mockConstructor: () => any,\n  ): any {\n    let name = metadata.name;\n    if (!name) {\n      return mockConstructor;\n    }\n\n    // Preserve `name` property of mocked function.\n    const boundFunctionPrefix = 'bound ';\n    let bindCall = '';\n    // if-do-while for perf reasons. The common case is for the if to fail.\n    if (name && name.startsWith(boundFunctionPrefix)) {\n      do {\n        name = name.substring(boundFunctionPrefix.length);\n        // Call bind() just to alter the function name.\n        bindCall = '.bind(null)';\n      } while (name && name.startsWith(boundFunctionPrefix));\n    }\n\n    // Special case functions named `mockConstructor` to guard for infinite\n    // loops.\n    if (name === MOCK_CONSTRUCTOR_NAME) {\n      return mockConstructor;\n    }\n\n    if (\n      // It's a syntax error to define functions with a reserved keyword\n      // as name.\n      RESERVED_KEYWORDS.has(name) ||\n      // It's also a syntax error to define functions with a name that starts with a number\n      /^\\d/.test(name)\n    ) {\n      name = '$' + name;\n    }\n\n    // It's also a syntax error to define a function with a reserved character\n    // as part of it's name.\n    if (FUNCTION_NAME_RESERVED_PATTERN.test(name)) {\n      name = name.replace(FUNCTION_NAME_RESERVED_REPLACE, '$');\n    }\n\n    const body =\n      'return function ' +\n      name +\n      '() {' +\n      'return ' +\n      MOCK_CONSTRUCTOR_NAME +\n      '.apply(this,arguments);' +\n      '}' +\n      bindCall;\n    const createConstructor = new this._environmentGlobal.Function(\n      MOCK_CONSTRUCTOR_NAME,\n      body,\n    );\n\n    return createConstructor(mockConstructor);\n  }\n\n  _generateMock(\n    metadata: MockFunctionMetadata,\n    callbacks: Array<() => any>,\n    refs: Object,\n  ): Mock {\n    const mock = this._makeComponent(metadata);\n    if (metadata.refID != null) {\n      refs[metadata.refID] = mock;\n    }\n\n    this._getSlots(metadata.members).forEach(slot => {\n      const slotMetadata = (metadata.members && metadata.members[slot]) || {};\n      if (slotMetadata.ref != null) {\n        callbacks.push(() => (mock[slot] = refs[slotMetadata.ref]));\n      } else {\n        mock[slot] = this._generateMock(slotMetadata, callbacks, refs);\n      }\n    });\n\n    if (\n      metadata.type !== 'undefined' &&\n      metadata.type !== 'null' &&\n      mock.prototype\n    ) {\n      mock.prototype.constructor = mock;\n    }\n\n    return mock;\n  }\n\n  /**\n   * @see README.md\n   * @param _metadata Metadata for the mock in the schema returned by the\n   * getMetadata method of this module.\n   */\n  generateFromMetadata(_metadata: MockFunctionMetadata): Mock {\n    const callbacks = [];\n    const refs = {};\n    const mock = this._generateMock(_metadata, callbacks, refs);\n    callbacks.forEach(setter => setter());\n    return mock;\n  }\n\n  /**\n   * @see README.md\n   * @param component The component for which to retrieve metadata.\n   */\n  getMetadata(component: any, _refs?: Map<any, any>): ?MockFunctionMetadata {\n    const refs = _refs || new Map();\n    const ref = refs.get(component);\n    if (ref != null) {\n      return {ref};\n    }\n\n    const type = getType(component);\n    if (!type) {\n      return null;\n    }\n\n    const metadata: MockFunctionMetadata = {type};\n    if (\n      type === 'constant' ||\n      type === 'collection' ||\n      type === 'undefined' ||\n      type === 'null'\n    ) {\n      metadata.value = component;\n      return metadata;\n    } else if (type === 'function') {\n      metadata.name = component.name;\n      if (component._isMockFunction === true) {\n        metadata.mockImpl = component.getMockImplementation();\n      }\n    }\n\n    metadata.refID = refs.size;\n    refs.set(component, metadata.refID);\n\n    let members = null;\n    // Leave arrays alone\n    if (type !== 'array') {\n      if (type !== 'undefined') {\n        this._getSlots(component).forEach(slot => {\n          if (\n            type === 'function' &&\n            component._isMockFunction === true &&\n            slot.match(/^mock/)\n          ) {\n            return;\n          }\n\n          const slotMetadata = this.getMetadata(component[slot], refs);\n          if (slotMetadata) {\n            if (!members) {\n              members = {};\n            }\n            members[slot] = slotMetadata;\n          }\n        });\n      }\n    }\n\n    if (members) {\n      metadata.members = members;\n    }\n\n    return metadata;\n  }\n\n  isMockFunction(fn: any): boolean {\n    return !!fn && fn._isMockFunction === true;\n  }\n\n  fn(implementation?: any): any {\n    const length = implementation ? implementation.length : 0;\n    const fn = this._makeComponent({length, type: 'function'});\n    if (implementation) {\n      fn.mockImplementation(implementation);\n    }\n    return fn;\n  }\n\n  spyOn(object: any, methodName: any, accessType?: string): any {\n    if (accessType) {\n      return this._spyOnProperty(object, methodName, accessType);\n    }\n\n    if (typeof object !== 'object' && typeof object !== 'function') {\n      throw new Error(\n        'Cannot spyOn on a primitive value; ' + this._typeOf(object) + ' given',\n      );\n    }\n\n    const original = object[methodName];\n\n    if (!this.isMockFunction(original)) {\n      if (typeof original !== 'function') {\n        throw new Error(\n          'Cannot spy the ' +\n            methodName +\n            ' property because it is not a function; ' +\n            this._typeOf(original) +\n            ' given instead',\n        );\n      }\n\n      object[methodName] = this._makeComponent({type: 'function'}, () => {\n        object[methodName] = original;\n      });\n\n      object[methodName].mockImplementation(function() {\n        return original.apply(this, arguments);\n      });\n    }\n\n    return object[methodName];\n  }\n\n  _spyOnProperty(obj: any, propertyName: any, accessType: string = 'get'): any {\n    if (typeof obj !== 'object' && typeof obj !== 'function') {\n      throw new Error(\n        'Cannot spyOn on a primitive value; ' + this._typeOf(obj) + ' given',\n      );\n    }\n\n    if (!obj) {\n      throw new Error(\n        'spyOn could not find an object to spy upon for ' + propertyName + '',\n      );\n    }\n\n    if (!propertyName) {\n      throw new Error('No property name supplied');\n    }\n\n    let descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);\n    let proto = Object.getPrototypeOf(obj);\n\n    while (!descriptor && proto !== null) {\n      descriptor = Object.getOwnPropertyDescriptor(proto, propertyName);\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    if (!descriptor) {\n      throw new Error(propertyName + ' property does not exist');\n    }\n\n    if (!descriptor.configurable) {\n      throw new Error(propertyName + ' is not declared configurable');\n    }\n\n    if (!descriptor[accessType]) {\n      throw new Error(\n        'Property ' + propertyName + ' does not have access type ' + accessType,\n      );\n    }\n\n    const original = descriptor[accessType];\n\n    if (!this.isMockFunction(original)) {\n      if (typeof original !== 'function') {\n        throw new Error(\n          'Cannot spy the ' +\n            propertyName +\n            ' property because it is not a function; ' +\n            this._typeOf(original) +\n            ' given instead',\n        );\n      }\n\n      descriptor[accessType] = this._makeComponent({type: 'function'}, () => {\n        // $FlowFixMe\n        descriptor[accessType] = original;\n        // $FlowFixMe\n        Object.defineProperty(obj, propertyName, descriptor);\n      });\n\n      descriptor[accessType].mockImplementation(function() {\n        return original.apply(this, arguments);\n      });\n    }\n\n    Object.defineProperty(obj, propertyName, descriptor);\n    return descriptor[accessType];\n  }\n\n  clearAllMocks() {\n    this._mockState = new WeakMap();\n  }\n\n  resetAllMocks() {\n    this._mockConfigRegistry = new WeakMap();\n    this._mockState = new WeakMap();\n  }\n\n  restoreAllMocks() {\n    this._spyState.forEach(restore => restore());\n    this._spyState = new Set();\n  }\n\n  _typeOf(value: any): string {\n    return value == null ? '' + value : typeof value;\n  }\n}\n\nexport type ModuleMocker = ModuleMockerClass;\nmodule.exports = new ModuleMockerClass(global);\n"],"sourceRoot":""}